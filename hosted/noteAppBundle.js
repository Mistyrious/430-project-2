(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("errorArea").classList.remove("is-hidden")};e.exports={handleError:t,sendPost:async(e,a,c)=>{const s=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),l=await s.json();document.getElementById("errorArea").classList.add("is-hidden"),l.error&&t(l.error),l.redirect&&(window.location=l.redirect),c&&c(l)},hideError:()=>{document.getElementById("errorArea").classList.add("hidden")}}}},t={};function a(c){var s=t[c];if(void 0!==s)return s.exports;var l=t[c]={exports:{}};return e[c](l,l.exports,a),l.exports}(()=>{const e=a(603),t=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#noteTitle").value,c=t.target.querySelector("#noteLocation").value,s=t.target.querySelector("#noteBody").value,l=t.target.querySelector("#noteFinishDate").value,n=t.target.querySelector("#_csrf").value;return a?(e.sendPost(t.target.action,{title:a,location:c,body:s,finishDate:l,_csrf:n},r),!1):(e.handleError("Note title is required!"),!1)},c=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#oldPass").value,c=t.target.querySelector("#pass").value,s=t.target.querySelector("#pass2").value,l=t.target.querySelector("#_csrf").value;if(!a||!c||!s)return e.handleError("All fields are required!"),c;c!==s&&e.handleError("New passwords do not match!"),e.sendPost(t.target.action,{oldPass:a,pass:c,pass2:s,_csrf:l})},s=e=>React.createElement("div",{className:"modal",id:"passChangeModal"},React.createElement("div",{className:"modal-background"}),React.createElement("div",{className:"modal-card"},React.createElement("div",{className:"modal-card-body"},React.createElement("form",{id:"changePassForm",onSubmit:c,name:"changePassForm",action:"/changePass",method:"POST",className:"passForm"},React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"oldPass"},"Current Password: "),React.createElement("div",{className:"control"},React.createElement("input",{className:"input",id:"oldPass",type:"password",name:"oldPass",placeholder:"password"}))),React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"pass"},"New Password: "),React.createElement("div",{className:"control"},React.createElement("input",{className:"input",id:"pass",type:"password",name:"pass",placeholder:"password"}))),React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"pass2"},"Confirm New Password: "),React.createElement("div",{className:"control"},React.createElement("input",{className:"input",id:"pass2",type:"password",name:"pass2",placeholder:"password"}))),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("div",{className:"field has-addons has-addons-right"},React.createElement("div",{className:"control"},React.createElement("input",{className:"button makeNoteSubmit",type:"submit",value:"Update"})))))),React.createElement("button",{className:"modal-close is-large",id:"modalCloser"})),l=e=>React.createElement("form",{id:"noteForm",onSubmit:t,name:"noteForm",action:"/makeNote",method:"POST",className:"form noteForm"},React.createElement("div",{className:"field"},React.createElement("label",{className:"label is-medium",htmlFor:"title"},"Title: "),React.createElement("div",{className:"control"},React.createElement("input",{className:"input is-medium",id:"noteTitle",type:"text",name:"title",maxLength:"25",placeholder:"Note Title",required:!0}))),React.createElement("div",{className:"field is-grouped"},React.createElement("label",{className:"label",htmlFor:"location"},"Location: "),React.createElement("div",{className:"control"},React.createElement("input",{className:"input",id:"noteLocation",type:"text",name:"location",placeholder:"Location"})),React.createElement("label",{className:"label",htmlFor:"finishDate"},"Finish Date: "),React.createElement("div",{className:"control"},React.createElement("input",{className:"input",id:"noteFinishDate",type:"datetime-local",name:"finishDate"}))),React.createElement("div",{className:"field"},React.createElement("label",{className:"label",htmlFor:"body"},"Note Body: "),React.createElement("div",{className:"control"},React.createElement("textarea",{className:"textarea",id:"noteBody",name:"body",rows:"5",cols:"25",placeholder:"Note Body"}))),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("div",{className:"field has-addons has-addons-right"},React.createElement("div",{className:"control"},React.createElement("input",{className:"button makeNoteSubmit",type:"submit",value:"Create Note"})))),n=e=>{if(0===e.notes.length)return React.createElement("div",{className:"noteList"},React.createElement("h3",{className:"title is-4 has-text-centered emptyNote"},"No Notes Yet!"));const t=e.notes.map((e=>{let t=new Date(e.finishDate).toTimeString();return React.createElement("div",{key:e._id,className:"note block has-background-warning-light"},React.createElement("div",{className:"noteHeader is-flex is-flex-direction-row is-justify-content-space-between"},React.createElement("h2",{className:"noteTitle title is-4 is-underlined"},e.title),React.createElement("button",{className:"button is-success deleteNoteButton"},React.createElement("span",null," âœ” "))),React.createElement("div",{className:"noteSubheader is-flex is-flex-direction-row is-justify-content-space-between"},React.createElement("h3",{className:"noteLocation m-1"},React.createElement("b",null,"Location:")," ",e.location),React.createElement("h3",{className:"noteFinishDate m-1"},React.createElement("b",null,"Finish Date:")," ",t)),React.createElement("p",{className:"noteBody"},React.createElement("b",null,"Body:")," ",e.body))}));return React.createElement("div",{className:"noteList is-flex is-flex-direction-row is-flex-wrap-wrap"},t)},r=async()=>{const t=await fetch("/getNotes"),a=await t.json();ReactDOM.render(React.createElement(n,{notes:a.notes}),document.getElementById("notes")),document.querySelectorAll(".deleteNoteButton").forEach((t=>{t.addEventListener("click",(t=>{(async t=>{let a=t.target.querySelector(".noteTitle").innerText;await e.sendPost("/deleteNote",{title:a}),r()})(t)}))}))};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json(),a=document.getElementById("changePassButton"),c=document.getElementById("createListButton");a.addEventListener("click",(()=>{document.getElementById("passChangeModal").classList.add("is-active")})),c.addEventListener("click",(()=>{ReactDOM.render(React.createElement(l,{csrf:t.csrfToken}),document.getElementById("makeNote"))})),ReactDOM.render(React.createElement(s,{csrf:t.csrfToken}),document.getElementById("changePass")),document.getElementById("modalCloser").addEventListener("click",(()=>{document.getElementById("passChangeModal").classList.remove("is-active")})),ReactDOM.render(React.createElement(n,{notes:[]}),document.getElementById("notes")),r()}})()})();